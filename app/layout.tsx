'use client'
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import WalletConnectProvider from '@walletconnect/web3-provider'
import { JsonRpcSigner, ethers } from 'ethers'
import { useState } from 'react'
import Web3Modal, { IProviderOptions } from 'web3modal'
import { AccountContext } from './account-context'

// const inter = Inter({ subsets: ["latin"] });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const [account, setAccount] = useState<string|null>(null)

    const providerOptions: IProviderOptions = {
        walletconnect: {
          package: WalletConnectProvider,
          options: {
            rpc: {
              31337: "http://localhost:8545", // Hardhat's default local network chain ID and URL
            },
          },
        },
      };
    async function connect() {
        try{
            const web3Modal = new Web3Modal({
                network: 'localhost',
                cacheProvider: false,
                providerOptions,
            })
            const connection = await web3Modal.connect();
            const provider = new ethers.BrowserProvider(connection);
            const accounts = await provider.listAccounts();
            setAccount(accounts[0].address);
        } catch (err) {
            console.log({err});
        }
    }
  return (
    <html lang="en">
      <body className={''}>
        <div className={''}>
          {
              !account && (
              <div className={''}>
                  <button className={''} onClick={connect}>Connect</button>
              </div>
              )
          }
          {
              account && <p className={''}>{account}</p>
          }
        </div>
        <AccountContext.Provider value={account}>
          {children}
        </AccountContext.Provider>
        </body>
    </html>
  );
}
